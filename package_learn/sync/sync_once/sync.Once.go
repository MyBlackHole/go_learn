/*
# sync.Once 类型 #

	与 sync.WaitGroup 类型类似，sync.Once 类型也是开箱即用和并发安全的，其主要用途是保证指定函数代码只执行一次，
	类似于单例模式，常用于应用启动时的一些全局初始化操作。它只提供了一个 Do 方法，
	该方法只接受一个参数，且这个参数的类型必须是 func()，即无参数无返回值的函数类型。

	在具体实现时，sync.Once 还提供了一个 uint32 类型的 done 字段，
	它的作用是记录 Do 传入函数被调用次数，显然，其对应的值只能是 0 和 1，之所以设置为 uint32 类型，
	是为了保证操作的原子性，回想下我们上篇教程中介绍的原子函数，再结合 Do 方法底层实现源码，
	即可知晓原因，这里不深入探讨了：
*/

package main 

import (
	"fmt"
)

func main (){

}